---
// ExperienciaLaboral.astro
interface Trabajo {
  puesto: string;
  empresa: string;
  periodo: string;
  descripcion: string[];
}

const experiencias: Trabajo[] = [
  {
    puesto: "Practica Profesional - Desarrollador Web",
    empresa: "Agencia BrandBits",
    periodo: "Febrero 2025 - Actualidad",
    descripcion: [
      "Desarrollo de sitios web con WordPress CMS Y WooCommerce, Plugins y temas personalizados",
      "Analisis web de clientes y optimizacion de sitios web",
      "SEO y Performance Optimization",
    ],
  },
  {
    puesto: "Desarrollador Front-end",
    empresa: "Eficontable",
    periodo: "Diciembre 2024 - Febrero 2025",
    descripcion: [
      "Desarrollo de sitio web con Astro, Tailwind CSS, JavaScript y Shadcn",
      "Implementacion de Calendly para la gestion de eventos",
    ],
  },
  {
    puesto: "Desarrollador Frontend y WordPress CMS",
    empresa: "Agis.cl",
    periodo: "Octubre 2024 - Diciembre 2024",
    descripcion: [
      "Desarrollo de sitios web con WordPress CMS Y WooCommerce",
      "Creacion de E-COMMERCE con Next.js y React",
      "Integración de APIs RESTful en aplicaciones web",
    ],
  },
  {
    puesto: "Desarrollador Front-end",
    empresa: "Psiquesanacion",
    periodo: "Agosto 2023 - Septiembre 2023",
    descripcion: [
      "Desarrollo de sitio web con HTML, CSS, JS Y Bulma Min CSS",
      "Creación de animaciones con CSS y JavaScript",
    ],
  },
];
---

<section class="text-green-400 py-16">
  <div class="text-gradient mb-11">
    <h2 class="text-green-500/70 text-5xl mt-10 font-bold">
      Experiencia Laboral
    </h2>
  </div>
  <div class="container mx-auto px-4">
    <div class="space-y-12">
      {
        experiencias.map((trabajo, index) => (
          <div class="experience-item opacity-0 border border-green-500 rounded-lg p-6 transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-green-500/50">
            <h3 class="text-2xl font-semibold mb-2">{trabajo.puesto}</h3>
            <p class="text-green-300 mb-4">
              {trabajo.empresa} | {trabajo.periodo}
            </p>
            <ul class="list-disc list-inside space-y-2">
              {trabajo.descripcion.map((item, itemIndex) => (
                <li
                  class="typing-animation"
                  style={`--delay: ${itemIndex * 0.5}s;`}
                >
                  {item}
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  section .text-gradient {
    background: radial-gradient(hsl(100 100% 50%), hsl(200 100% 60%)) fixed;
    background: conic-gradient(
        hsl(100 100% 50%),
        hsl(200 100% 50%),
        hsl(100 100% 50%)
      )
      fixed;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-align: center;
  }

  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }

  .typing-animation {
    overflow: hidden;
    white-space: nowrap;
    animation: typing 2s steps(40, end);
    animation-fill-mode: forwards;
    animation-delay: var(--delay);
    width: 0;
  }

  .experience-item {
    transition:
      opacity 0.5s ease-out,
      transform 0.5s ease-out;
  }

  .experience-item.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", (event) => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target);
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    document.querySelectorAll(".experience-item").forEach((item) => {
      observer.observe(item);
    });
  });
</script>
