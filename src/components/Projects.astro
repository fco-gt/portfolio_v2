---
import { motion } from "framer-motion";
import NextJS from "../components/icons/NextJS.astro";
import Tailwind from "../components/icons/Tailwind.astro";
import Typescript from "../components/icons/Typescript.astro";
import React from "../components/icons/React.astro";
import Javascript from "../components/icons/Javascript.astro";
import NodeJS from "../components/icons/NodeJS.astro";
import MongoDB from "../components/icons/MongoDB.astro";
import HTML from "../components/icons/HTML.astro";
import CSS3 from "../components/icons/CSS3.astro";

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-blue-500/50 text-white",
    icon: Typescript,
  },
  REACT: {
    name: "React",
    class: "bg-blue-500/50 text-white",
    icon: React,
  },
  JAVASCRIPT: {
    name: "Javascript",
    class: "bg-yellow-500/50 text-black",
    icon: Javascript,
  },
  NODEJS: {
    name: "Node.js",
    class: "bg-green-500/50 text-white",
    icon: NodeJS,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-green-500/70 text-white",
    icon: MongoDB,
  },
  HTML: {
    name: "HTML",
    class: "bg-orange-500/50 text-white",
    icon: HTML,
  },
  CSS: {
    name: "CSS",
    class: "bg-blue-500/50 text-white",
    icon: CSS3,
  },
};

const projects = [
  {
    name: "Mankekito",
    description: "Bot de Discord multifuncional",
    image: "/images/projects/mankekito.png",
    isPrivate: true,
    invite:
      "https://discord.com/oauth2/authorize?client_id=758059320238931978&scope=bot&permissions=27652058174",
    topgg: "https://top.gg/bot/758059320238931978",
    tags: [TAGS.JAVASCRIPT, TAGS.NODEJS, TAGS.MONGODB],
  },
  {
    name: "GT-Links",
    description: "Acortador de enlaces",
    image: "/images/projects/gt-links.png",
    isPrivate: false,
    github: "https://github.com/fco-gt/gt-links",
    url: "https://gt-links.vercel.app",
    tags: [
      TAGS.JAVASCRIPT,
      TAGS.NEXT,
      TAGS.TAILWIND,
      TAGS.MONGODB,
      TAGS.TYPESCRIPT,
    ],
  },
  {
    name: "Master Bikes",
    description: "E-Commerce de una tienda de bicicletas (ficticio)",
    image: "/images/projects/master-bikes.png",
    isPrivate: false,
    github: "https://github.com/fco-gt/bikes-ecommerce",
    url: "https://master-bikes.vercel.app",
    tags: [
      TAGS.TAILWIND,
      TAGS.NEXT,
      TAGS.TYPESCRIPT,
      TAGS.REACT,
      TAGS.JAVASCRIPT,
    ],
  },
  {
    name: "GT-Bikes",
    description:
      "APIREST Para un catalogo de bicicletas (codigo en mantenimiento pero funcional)",
    image: "/images/projects/gt-bikes.png",
    isPrivate: false,
    github: "https://github.com/fco-gt/bikes-api",
    url: "https://bikes-api.onrender.com",
    tags: [TAGS.NODEJS, TAGS.JAVASCRIPT],
  },
  {
    name: "Spotify Playlist",
    description: "Web que muestra mis playlists de Spotify",
    image: "/images/projects/spotify-playlists.png",
    isPrivate: false,
    github: "https://github.com/fco-gt/playlist",
    url: "https://fco-gt.github.io/playlist/",
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT],
  },
  {
    name: "Animated Login/Register",
    description: "Formulario de login y registro animado",
    image: "/images/projects/login-register.png",
    isPrivate: false,
    github: "https://github.com/fco-gt/LogIn-Register",
    url: "https://fco-gt.github.io/LogIn-Register/",
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT],
  },
  {
    name: "Mankekito GIF's",
    description: "Libreria NPM para obtener GIF's",
    image: "/images/projects/mankekito-gifs.png",
    isPrivate: false,
    github: "https://github.com/fco-gt/mankekito-gifs",
    url: "https://www.npmjs.com/package/mankekito-gifs",
    tags: [TAGS.JAVASCRIPT, TAGS.NODEJS],
  },
];
---

<section class="text-center">
  <motion.h2
    client:load
    initial={{ opacity: 0, y: -50 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.5 }}
    className="text-5xl font-bold mb-12"
  >
    <div class="text-gradient mb-11">
      <h2 class="text-green-500/70 text-5xl mt-10 font-bold">Proyectos</h2>
    </div>
  </motion.h2>

  <div
    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 px-4 md:px-8 lg:px-16"
  >
    {
      projects.map((project, index) => (
        <motion.article
          client:load
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          whileHover={{
            scale: 1.05,
            boxShadow: "0 0 25px rgba(0, 255, 0, 0.5)",
            transition: { duration: 0.3 },
          }}
          transition={{ duration: 0.5, delay: index * 0.1 }}
          className="bg-gray-700/10 rounded-lg overflow-hidden shadow-lg transform transition duration-300"
        >
          <motion.img
            src={project.image}
            alt={project.name}
            className="w-full h-48 object-cover"
            whileHover={{
              scale: 1.1,
              transition: { duration: 0.3 },
            }}
          />
          <div class="p-6">
            <h3 class="text-xl font-semibold text-white mb-2">
              {project.name}
            </h3>
            <p class="text-gray-300 mb-4">{project.description}</p>
            <ul class="flex flex-wrap gap-2 mb-4">
              {project.tags.map((tag) => (
                <li>
                  <span
                    class={`flex items-center gap-1 rounded-full text-xs ${tag.class} py-1 px-2`}
                  >
                    <tag.icon class="w-4 h-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>
            <div class="flex justify-center gap-2">
              {project.isPrivate ? (
                <motion.a
                  href={project.invite}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition duration-300"
                  whileHover={{
                    scale: 1.1,
                    backgroundColor: "#22c55e",
                    transition: { duration: 0.2 },
                  }}
                >
                  Invitar
                </motion.a>
              ) : (
                <>
                  <motion.a
                    href={project.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition duration-300"
                    whileHover={{
                      scale: 1.1,
                      backgroundColor: "#22c55e",
                      transition: { duration: 0.2 },
                    }}
                  >
                    Ver
                  </motion.a>
                  <motion.a
                    href={project.github}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded transition duration-300"
                    whileHover={{
                      scale: 1.1,
                      backgroundColor: "#6b7280",
                      transition: { duration: 0.2 },
                    }}
                  >
                    CÃ³digo
                  </motion.a>
                </>
              )}
              {project.topgg && (
                <motion.a
                  href={project.topgg}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300"
                  whileHover={{
                    scale: 1.1,
                    backgroundColor: "#3b82f6",
                    transition: { duration: 0.2 },
                  }}
                >
                  Top.gg
                </motion.a>
              )}
            </div>
          </div>
        </motion.article>
      ))
    }
  </div>
</section>

<style>
  section .text-gradient {
    background: radial-gradient(hsl(100 100% 50%), hsl(200 100% 60%)) fixed;
    background: conic-gradient(
        hsl(100 100% 50%),
        hsl(200 100% 50%),
        hsl(100 100% 50%)
      )
      fixed;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-align: center;
  }
</style>
